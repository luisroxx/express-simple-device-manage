{
  "swagger": "2.0",
  "info": {
    "description": "Device management swagger",
    "version": "1.0.0",
    "title": "Swagger Device Management",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [],
  "schemes": ["http"],
  "paths": {
    "/devices": {
      "get": {
        "tags": ["device"],
        "summary": "List devices",
        "description": "List all devices",
        "operationId": "listDevices",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeviceResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["device"],
        "summary": "Creates a device",
        "description": "",
        "operationId": "createDevice",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Device that's going to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestBodyCreateDevice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/devices/{id}": {
      "get": {
        "tags": ["device"],
        "summary": "Find one device",
        "description": "Find one device by id",
        "operationId": "findDevice",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of device to find",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/DeviceResponse"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      },
      "put": {
        "tags": ["device"],
        "summary": "Update an existing device",
        "description": "",
        "operationId": "updateDevice",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of device to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Device that's going to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RequestBodyCreateDevice"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Device not found"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "security": [
          {
            "petstore_auth": ["write:pets", "read:pets"]
          }
        ]
      },
      "delete": {
        "tags": ["device"],
        "summary": "Deletes a device",
        "description": "",
        "operationId": "deleteDevice",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of device to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          },
          "404": {
            "description": "Device not found"
          }
        }
      }
    }
  },
  "definitions": {
    "DeviceResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "factory": {
          "$ref": "#/definitions/FactoryResponseResponse"
        },
        "manufacturerType": {
          "$ref": "#/definitions/ManufacturerTypeResponse"
        },
        "deviceType": {
          "$ref": "#/definitions/DeviceTypeResponse"
        },
        "isOnline": {
          "type": "boolean"
        },
        "attributes": {
          "$ref": "#/definitions/DeviceAttributeValueResponse"
        }
      }
    },
    "FactoryResponseResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ManufacturerTypeResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DeviceTypeResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "$ref": "#/definitions/DeviceAttributesResponse"
        }
      }
    },
    "DeviceAttributeValueResponse": {
      "type": "object",
      "properties": {
        "deviceAttributeId": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "DeviceAttributesResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RequestBodyCreateDevice": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Device 1"
        },
        "ip": {
          "type": "string",
          "format": "ipv4",
          "example": "192.168.1.10"
        },
        "factoryId": {
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "manufacturerId": {
          "type": "integer",
          "format": "int32",
          "example": 2
        },
        "deviceTypeId": {
          "type": "integer",
          "format": "int32",
          "example": 2
        },
        "isOnline": {
          "type": "boolean",
          "example": true
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequestBodyAttributes"
          }
        }
      }
    },
    "RequestBodyAttributes": {
      "type": "object",
      "properties": {
        "deviceAttributesEntityId": {
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "value": {
          "type": "string",
          "example": "Attribute Value"
        }
      }
    },
    "ApiError": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}
